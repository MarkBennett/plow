#!/usr/bin/env bash

set -e

function plow_usage()
{
  echo
  echo "$(basename $0) runs recipes on your servers"
  echo
  echo "usage: $(basename $0) --env environment [--role rolename] [--sudo] commands | [--help]"
  echo
  echo "       commands           : list of recipes that you want to execute"
  echo "                          :   e.g. postgres nginx rails"
  echo "                          :   (should correspond to recipes in Plowfile)"
  echo "       --env              : choose a target environment .env file"
  echo "       --role             : use role when choosing destination servers"
  echo "       --sudo             : run all commands as sudo"
  echo "       --help             : displays the information you're reading now"
  echo
}


declare -a commands

if test $# = 0; then
  usage
  exit 64 # EX_USAGE - The command was used incorrectly
fi

while test $# != 0; do
  case "$1" in
    --env)
      shift
      ENVIRONMENT=$1
      ENV_FILE=.env.$ENVIRONMENT
      ;;
    --role)
      shift
      ROLE=$1
      ;;
    --sudo)
      SUDO=sudo
      ;;
    --user)
      shift
      USER=$1
    --help|usage|help)
      plow_usage
      exit
      ;;
    *)
      commands[${#commands[@]}]="$1"
      ;;
  esac
  shift
done


recipe() {
  if command -v wget > /dev/null; then 
    wget -nc -q -P .plow $1
  else
    bail "wget not installed: brew install wget"
  fi 
}

bail() {
  echo -e "\033[31m  failed: $1\033[0m"
  exit 1
}

if [ ! $ENVIRONMENT ]; then
  echo "Assuming staging environment..."
  ENVIRONMENT="staging"
fi

ENV_FILE=.env.$ENVIRONMENT
[[ -f $ENV_FILE ]] || bail "no $ENV_FILE found"
source $ENV_FILE

mkdir -p .plow && cat $ENV_FILE > .plow/plow.sh

if [ $SERVER ]; then
  SERVERS[${#SERVERS[@]}]=$SERVER
else
  TAG=${PWD##*/}
  [[ $ROLE ]] && TAG+="_$ROLE"
  TAG+="_$ENVIRONMENT"

  DESCRIBE_TAG=$(ec2-describe-tags --filter "key=Name" --filter "value=$TAG")
  [[ $DESCRIBE_TAG ]] || bail "no target server found matching '$TAG'"
  INSTANCE_NAMES=($(echo "${DESCRIBE_TAG}" | grep TAG | awk {'print $3'}))

  for instance in ${INSTANCE_NAMES[@]}; do 
    DESCRIBE_INSTANCE=$(ec2-describe-instances --filter "instance-state-name=running" $instance)
    SERVERS[${#SERVERS[@]}]=$(echo ${DESCRIBE_INSTANCE} | sed -E 's/RESERVATION.*ami-.{9}//' | sed -E 's/\ .*//')
  done
fi

if [ ${#commands[@]} == '0' ]; then
  bail "No recipes specified"
else
  source Plowfile
  for i in "${RECIPES[@]}"
  do
    recipe $i
  done  
  for command in "${commands[@]}"
  do
    command_file=$(find .plow -type f \( -name "$command" -or -name "$command.sh" \))
    [[ -f $command_file ]] || bail "Recipe '$command' not found"
    {
      echo
      echo "echo -e '\033[1;33m== Processing recipe: $command\033[0m'"
      cat $command_file
    }  >> .plow/plow.sh
  done  
fi

[[ ${FILES[@]} ]] && mkdir -p .plow/files && cp ${FILES[@]} .plow/files/ && cd .plow
for server in ${SERVERS[@]}; do
  echo -e "\033[1;35m== Plowing $server\033[0m"
  tar cz . | ssh $DEPLOYER@$server "rm -rf plow && mkdir plow && cd plow && tar xz && $SUDO bash plow.sh"
done
